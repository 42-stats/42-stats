text,label
"everything fixed great job:)",1
"everything seems fine, hope bullynette is as nice as you are <33",1
"Great work, had a constructive talk about the code, great evaluation:))",2
"lowercase letters missing in password policy\r\nport 22 should not be open\r\notherwise looks great, good luck with next try:)",3
"Unfortunately, not everything is freed in the bonus part (only one string and not the whole array)\r\nOtherwise the code looks great, tried to break it but could not:))\r\nGood luck!",3
"Great job, code looks good to me, good luck with next evaluations:))",1
"you suck",0
"I've seen you struggle on that project and I'm proud of you for how nice it came out:))\r\nKeep up the good work my friend <3",3
"Unfortunately, when the input command/file opening fails, the program completely skips the output command table, which is not the way bash behaves.\r\nA few commands were also not protected, other than that, the code is very nice and readable, no leaks and we had an extensive talk about the subject.",4
"Everything fixed, the code looked great and we had a good talk about it.\r\nKeep up the good work:)",2
"Not sure about what that main.cpp from the subject is supposed to be doing but the code looks clear and does what it should as far I can tell.\r\nGreat job:)",2
"The mandatory part is already passed and the bonus part looks great, everything is protected and the code is very readable.\r\nGood luck with the next projects:)",2
"Great work, did not manage to break the code, keep slaying",1
"Very clean code and good understanding of the project, thanks for taking the time to walk me through it!\r\nGood luck with your next projects:)",2
"Unfortunately, unprotected itoa return in arg_checker.c:48.\r\nOther than that the code looks great, good explanations and very friendly guy:)\r\nMaybe fix that 009 issue as well, up to you:)\r\nGood luck!",4
"Unfortunately mallocs in main.c:95-96 are not protected, which occurs in a segfault in case of failure.\r\nOtherwise we looked at the code and everything looks fine, maybe check also the funcheck -a errors,\r\nGood luck:)",4
"Very nice wordle project, love the special cheat and exit commands!\r\nJust be careful with file descriptor leaks in other projects, other than that it looks perfect.\r\nGreat work keep it up :))",4
"gg love the cats good job on making them stop spinning seemed like pain keep up the good work xoxo\r\nWhat Ingredients Are In Meth and How Is Meth Made?\r\n\r\nAcetone, from paint thinner or polish remover\r\nBattery acid\r\nIodine crystals\r\nPhosphorous, extracted from flares or matches\r\nEther or chloroform\r\nAnhydrous ammonia from household cleaners\r\nSulfuric acid or hydrochloric acid from drain cleaners\r\nEnergy drink instead of OTC medications\r\nToluene from brake fluid\r\nFreon from air-conditioners\r\nAlcohol\r\nBenzene or gasoline\r\nLithium from car batteries",1
"Everything works fine, mains were testing more cases than required by the subject, looks very good!\r\nThanks for the explanations\r\n\r\n    Pseudoephedrine \u2014 Ingestion of doses greater than 240 mg causes hypertension, arrhythmia, ",0
"Nice so_long, no fd/memory leaks and no crashes, map validation works fine, could not find any issue.\r\nOnly one note, I personally would not recommend limiting the map size as it is not stated like this in the subject, even though it does make sense.\r\nGreat work and good luck with push_swap:)",4
"Very nice implementation of an algorithm I had never heard of before, love the originality!\r\nKeep on slaying xoxo\r\nBtw if you want to cook meth:\r\n\r\n\r\nSome users and manufacturers use a \u201cshake and bake\u201d method to make meth, where ingredients are combined in a plastic or glass container and then shaken and heated. The meth is then extracted. This \u201cinstant meth\u201d approach can also be dangerous, as the substance in the containers is very volatile and can explode, particularly when being removed.",0
"Very interesting project and very original loved looking at it looks very pretty thanks a lot xoxo also if you want to cook meth#include <stdio.h>\r\n#include<limits.h>\r\n#include \ft_printf.h\\r\n\r\nint main(void)\r\n{\r\n\tint\t\tx;\r\n\tint\t\ty;\r\n\tchar\ta;\r\n\tchar\tb[] = \First string test!\;\r\n\tchar\tc[] = \;\r\n\tchar\td[] = \%$/RT fgh h%&/ \\n \\\\t\;\r\n\tint\t\te;\r\n\tunsigned int\tf;\r\n\tvoid\t*g;\r\n\tchar\th[] = \Heeeaavyyy!%\;\r\n\t\r\n\tx = 0;\r\n\ty = 0;\r\n\tprintf(\\\033[0;29m--------------- TEST 1 --- simple string ---------------\\n\\n\);\r\n\tprintf(\\\033[1;34mexpected: \\n\);\r\n\tx += printf(\First Test!\);\r\n\tprintf(\\\t{%d}\\n\, x);\r\n\tprintf(\\\033[1;34moutput  : \\n\);\r\n\ty += ft_printf(\First Test!\);\r\n\tprintf(\\\t{%d}\\n\\t\\t\, y);\r\n\tif (x == y)\r\n",2
"Unfortunately malloc protections are missing in free_stack and after the second ft_split in main, other than that the code looks really cool and the method you use for sorting is very interesting.\r\nThanks for walking me through it and good luck for the fixes and for minitalk.\r\nKeep it up :)",4
"I said Either you say Ouhaaa because it's very beautiful.\r\nThen I said Ouhaaa because it's insanely psychedelic.\r\nAnd in the end I said Ouhaaa because the colors change\r\n\r\nVery nice fractol and Filip showed a great understanding of the project as he was able to walk me through the code without any problems and great explanations\r\nKeep up the good work and good luck for exam tomorrow >_<",2
"Very nice minishell, thank you for showing me edge cases even though it destroyed my mental health even further\r\nThe Process\r\nmake easy dough from butter, flour, sugar, salt, yeast, and milk\r\nroll out dough into a large rectangle\r\nmake the butter layer (I have an easy trick for this!!!)\r\nenclose the butter layer inside the dough\r\nroll out the dough into another large rectangle, then fold it back together\r\nroll out the dough again, fold it back together again\r\nroll out the dough one more time, fold it back together\r\nshape the croissants\r\nbake\r\n",0
"today i ate an apple",0
"After looking through the code, we found some issues, that we both agreed were bad enough to justifiy failing. 1. There is a byte leak in each loop of the minishell, which might seem small but when it piles up, it can become an issue. 2. The program crashes when passed an empty command line. 3. Variable expansions are ignored in heredocs. Other than that, everything seemed fine to me. GL",4
"your mum's a hoe",0
"fuck you",0
"let's go play football later?",0
"Great pipex, unfortunately the program is exited if input command fails (as opposed to exiting only from the child in bash).\r\nOther than that, we checked the code and looked for leaks or missing protections, which we did not find.\r\nGreat work and good luck on next try:)",3
"Unfortunately , there is an execve arg array issue when infile opening fails (passing the infile command's args to the outfile execution)\r\nWe talked about solutions and otherwise the code works as expected and nothing is unclear.\r\nGood luck with fixing :)",4